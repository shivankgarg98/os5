#!/usr/bin/env bash
#
# Requires a gcc cross compile in order to build
# Proposed build instructions in gcc source directory
#
# > configure --target=i386-elf --prefix=/usr/local/Cellar/gcc-cross/<version>
# > make all-gcc
# > make install-gcc
# > brew link gcc-cross
#
# Also requires specially build binutils.

BUILDDIR=`pwd`/build
NEWLIBDIR=`pwd`/newlib
PATCHFILE=`pwd`/newlib.patch

LDPATH=`which i386-elf-ld`
LDDIR=`dirname $LDPATH`
LDREAL=`readlink $LDPATH`
LDREALDIR=`dirname $LDREAL`
BINUTILS=`cd $LDDIR/$LDREALDIR/../i386-elf/bin; pwd`

pushd $BUILDDIR/newlib
  if [ -z $1 ]; then
    echo "Commands:"
    echo reconfigure
    echo build
    echo --
    echo patch
    echo makepatch
    echo reset
    exit 0
  fi
  if [ $1 == "reconfigure" ]; then
    rm -r *
    $NEWLIBDIR/configure --prefix=$BUILDDIR/lib --target=i386-elf
    pushd ../libgloss
      rm -r *
      $NEWLIBDIR/libgloss/configure --prefix=$BUILDDIR/lib CC=i386-elf-gcc AS='nasm -f elf' AR=i386-elf-ar LD=i386-elf-ld RANLIB=i386-elf-ranlib
    popd
  fi
  if [ $1 == "build" ]; then
    export PATH=$BINUTILS:$PATH
    make all
    make install
    cp /usr/local/Cellar/gcc-cross/4.8.1/lib/gcc/i386-elf/4.8.1/include/stddef.h $BUILDDIR/lib/i386-elf/include/.
  fi
  if [ $1 == "libgloss" ]; then
    pushd ../libgloss
    export PATH=$BINUTILS:$PATH
      CFLAGS=-I$BUILDDIR/lib/i386-elf/include make all
      make install
    popd
  fi
  if [ $1 == "patch" ]; then
    pushd $NEWLIBDIR
      git apply $PATCHFILE
    popd
  fi
  if [ $1 == "makepatch" ]; then
    pushd $NEWLIBDIR
    git add .
    PATCH=`git diff --cached`
    if [ -z $PATCH ]; then
      echo No changes
      exit 1
    fi
    git diff --cached --no-color > $PATCHFILE
    git reset HEAD .
    popd
  fi
  if [ $1 == "reset" ]; then
    pushd $NEWLIBDIR
      git checkout .
      git clean -f
    popd
  fi
      
popd
